% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_functions.R
\name{maat}
\alias{maat}
\title{Simulate multi-stage adaptive test}
\usage{
maat(
  examinee_list = examinee_list,
  assessment_structure,
  module_list,
  config,
  cut_scores,
  overlap_control_policy,
  transition_policy = "CI",
  combine_policy = "conditional",
  transition_CI_alpha = NULL,
  transition_percentile_lower = NULL,
  transition_percentile_upper = NULL,
  initial_theta_list = NULL,
  verbose = TRUE
)
}
\arguments{
\item{examinee_list}{an examinee list from \code{\link{simExaminees}}.}

\item{assessment_structure}{a \code{\linkS4class{assessment_structure}} object.}

\item{module_list}{a module list from \code{\link{loadModules}}.}

\item{config}{a \code{\linkS4class{config_Shadow}} object.}

\item{cut_scores}{a named list containing cut scores to be used in each grade. Each element must be named in the form \code{G?}, where \code{?} is a number.}

\item{overlap_control_policy}{overlap control is performed by excluding administered items from being administered again within the same examinee.
\itemize{
\item{\code{all}} performs overlap control at all module positions.
\item{\code{within_test}} performs overlap control only within each test.
\item{\code{none}} does not perform overlap control.
}}

\item{transition_policy}{\itemize{
\item{\code{CI}} uses the confidence interval to perform routing.
\item{\code{pool_difficulty_percentile}} uses item difficulty percentiles of all items in the \code{item_pool} argument to perform routing.
\item{\code{pool_difficulty_percentile_exclude_administered}} uses item difficulty percentiles of all items in the \code{item_pool} argument to perform routing, excluding all previous items administered to the examinee.
\item{\code{on_grade}} does not permit any transition.
\item{} (default = \code{CI})
}}

\item{combine_policy}{\itemize{
  \item{} This is only applied when \code{module_position \%\% 2 == 0} (at Phase 2, which is the end of each test).
  \item{\code{conditional}} uses the combined theta (using items from the previous module combined with the current module), if the examinee was in the same grade in Phases 1 and 2. If the examinee was in different grades in Phases 1 and 2, then the theta estimate from Phase 2 is used.
  \item{\code{always}} uses the combined theta.
  \item{\code{never}} uses the theta estimate from Phase 2.
  \item{} (default = \code{conditional})
}}

\item{transition_CI_alpha}{the alpha level to use when \code{transition_policy == "CI"}.}

\item{transition_percentile_lower}{the percentile value (between 0 and 1) to use for the lower routing when \code{transition_policy == "difficulty_percentile"}.}

\item{transition_percentile_upper}{the percentile value (between 0 and 1) to use for the upper routing when \code{transition_policy == "difficulty_percentile"}.}

\item{initial_theta_list}{(optional) a list containing initial thetas to use in each module position.}

\item{verbose}{if \code{TRUE}, print status messages. (default = \code{TRUE})}
}
\value{
a named list containing \code{\linkS4class{examinee}} objects from the simulation.
}
\description{
\code{\link{maat}} is the main function for simulating a multi-stage adaptive test.
}
\examples{
library(TestDesign)
config <- createShadowTestConfig(
  final_theta = list(
    method = "MLE"
  )
)
examinee_list <- maat(
  examinee_list          = examinee_list_math,
  assessment_structure   = assessment_structure_math,
  module_list            = module_list_math,
  overlap_control_policy = "all",
  transition_CI_alpha    = 0.05,
  config                 = config,
  cut_scores             = cut_scores_math
)

}
